// this file is automatically generated by go generate, do not edit

package lang

func getBlock(char rune) string {
	switch {
	case 0x0 <= char && char <= 0x7f:
		return "Basic Latin"
	case 0x80 <= char && char <= 0xff:
		return "Latin-1 Supplement"
	case 0x100 <= char && char <= 0x17f:
		return "Latin Extended-A"
	case 0x180 <= char && char <= 0x24f:
		return "Latin Extended-B"
	case 0x250 <= char && char <= 0x2af:
		return "IPA Extensions"
	case 0x2b0 <= char && char <= 0x2ff:
		return "Spacing Modifier Letters"
	case 0x300 <= char && char <= 0x36f:
		return "Combining Diacritical Marks"
	case 0x370 <= char && char <= 0x3ff:
		return "Greek and Coptic"
	case 0x400 <= char && char <= 0x4ff:
		return "Cyrillic"
	case 0x500 <= char && char <= 0x52f:
		return "Cyrillic Supplement"
	case 0x530 <= char && char <= 0x58f:
		return "Armenian"
	case 0x590 <= char && char <= 0x5ff:
		return "Hebrew"
	case 0x600 <= char && char <= 0x6ff:
		return "Arabic"
	case 0x700 <= char && char <= 0x74f:
		return "Syriac"
	case 0x750 <= char && char <= 0x77f:
		return "Arabic Supplement"
	case 0x780 <= char && char <= 0x7bf:
		return "Thaana"
	case 0x7c0 <= char && char <= 0x7ff:
		return "NKo"
	case 0x800 <= char && char <= 0x83f:
		return "Samaritan"
	case 0x840 <= char && char <= 0x85f:
		return "Mandaic"
	case 0x860 <= char && char <= 0x86f:
		return "Syriac Supplement"
	case 0x870 <= char && char <= 0x89f:
		return "Arabic Extended-B"
	case 0x8a0 <= char && char <= 0x8ff:
		return "Arabic Extended-A"
	case 0x900 <= char && char <= 0x97f:
		return "Devanagari"
	case 0x980 <= char && char <= 0x9ff:
		return "Bengali"
	case 0xa00 <= char && char <= 0xa7f:
		return "Gurmukhi"
	case 0xa80 <= char && char <= 0xaff:
		return "Gujarati"
	case 0xb00 <= char && char <= 0xb7f:
		return "Oriya"
	case 0xb80 <= char && char <= 0xbff:
		return "Tamil"
	case 0xc00 <= char && char <= 0xc7f:
		return "Telugu"
	case 0xc80 <= char && char <= 0xcff:
		return "Kannada"
	case 0xd00 <= char && char <= 0xd7f:
		return "Malayalam"
	case 0xd80 <= char && char <= 0xdff:
		return "Sinhala"
	case 0xe00 <= char && char <= 0xe7f:
		return "Thai"
	case 0xe80 <= char && char <= 0xeff:
		return "Lao"
	case 0xf00 <= char && char <= 0xfff:
		return "Tibetan"
	case 0x1000 <= char && char <= 0x109f:
		return "Myanmar"
	case 0x10a0 <= char && char <= 0x10ff:
		return "Georgian"
	case 0x1100 <= char && char <= 0x11ff:
		return "Hangul Jamo"
	case 0x1200 <= char && char <= 0x137f:
		return "Ethiopic"
	case 0x1380 <= char && char <= 0x139f:
		return "Ethiopic Supplement"
	case 0x13a0 <= char && char <= 0x13ff:
		return "Cherokee"
	case 0x1400 <= char && char <= 0x167f:
		return "Unified Canadian Aboriginal Syllabics"
	case 0x1680 <= char && char <= 0x169f:
		return "Ogham"
	case 0x16a0 <= char && char <= 0x16ff:
		return "Runic"
	case 0x1700 <= char && char <= 0x171f:
		return "Tagalog"
	case 0x1720 <= char && char <= 0x173f:
		return "Hanunoo"
	case 0x1740 <= char && char <= 0x175f:
		return "Buhid"
	case 0x1760 <= char && char <= 0x177f:
		return "Tagbanwa"
	case 0x1780 <= char && char <= 0x17ff:
		return "Khmer"
	case 0x1800 <= char && char <= 0x18af:
		return "Mongolian"
	case 0x18b0 <= char && char <= 0x18ff:
		return "Unified Canadian Aboriginal Syllabics Extended"
	case 0x1900 <= char && char <= 0x194f:
		return "Limbu"
	case 0x1950 <= char && char <= 0x197f:
		return "Tai Le"
	case 0x1980 <= char && char <= 0x19df:
		return "New Tai Lue"
	case 0x19e0 <= char && char <= 0x19ff:
		return "Khmer Symbols"
	case 0x1a00 <= char && char <= 0x1a1f:
		return "Buginese"
	case 0x1a20 <= char && char <= 0x1aaf:
		return "Tai Tham"
	case 0x1ab0 <= char && char <= 0x1aff:
		return "Combining Diacritical Marks Extended"
	case 0x1b00 <= char && char <= 0x1b7f:
		return "Balinese"
	case 0x1b80 <= char && char <= 0x1bbf:
		return "Sundanese"
	case 0x1bc0 <= char && char <= 0x1bff:
		return "Batak"
	case 0x1c00 <= char && char <= 0x1c4f:
		return "Lepcha"
	case 0x1c50 <= char && char <= 0x1c7f:
		return "Ol Chiki"
	case 0x1c80 <= char && char <= 0x1c8f:
		return "Cyrillic Extended-C"
	case 0x1c90 <= char && char <= 0x1cbf:
		return "Georgian Extended"
	case 0x1cc0 <= char && char <= 0x1ccf:
		return "Sundanese Supplement"
	case 0x1cd0 <= char && char <= 0x1cff:
		return "Vedic Extensions"
	case 0x1d00 <= char && char <= 0x1d7f:
		return "Phonetic Extensions"
	case 0x1d80 <= char && char <= 0x1dbf:
		return "Phonetic Extensions Supplement"
	case 0x1dc0 <= char && char <= 0x1dff:
		return "Combining Diacritical Marks Supplement"
	case 0x1e00 <= char && char <= 0x1eff:
		return "Latin Extended Additional"
	case 0x1f00 <= char && char <= 0x1fff:
		return "Greek Extended"
	case 0x2000 <= char && char <= 0x206f:
		return "General Punctuation"
	case 0x2070 <= char && char <= 0x209f:
		return "Superscripts and Subscripts"
	case 0x20a0 <= char && char <= 0x20cf:
		return "Currency Symbols"
	case 0x20d0 <= char && char <= 0x20ff:
		return "Combining Diacritical Marks for Symbols"
	case 0x2100 <= char && char <= 0x214f:
		return "Letterlike Symbols"
	case 0x2150 <= char && char <= 0x218f:
		return "Number Forms"
	case 0x2190 <= char && char <= 0x21ff:
		return "Arrows"
	case 0x2200 <= char && char <= 0x22ff:
		return "Mathematical Operators"
	case 0x2300 <= char && char <= 0x23ff:
		return "Miscellaneous Technical"
	case 0x2400 <= char && char <= 0x243f:
		return "Control Pictures"
	case 0x2440 <= char && char <= 0x245f:
		return "Optical Character Recognition"
	case 0x2460 <= char && char <= 0x24ff:
		return "Enclosed Alphanumerics"
	case 0x2500 <= char && char <= 0x257f:
		return "Box Drawing"
	case 0x2580 <= char && char <= 0x259f:
		return "Block Elements"
	case 0x25a0 <= char && char <= 0x25ff:
		return "Geometric Shapes"
	case 0x2600 <= char && char <= 0x26ff:
		return "Miscellaneous Symbols"
	case 0x2700 <= char && char <= 0x27bf:
		return "Dingbats"
	case 0x27c0 <= char && char <= 0x27ef:
		return "Miscellaneous Mathematical Symbols-A"
	case 0x27f0 <= char && char <= 0x27ff:
		return "Supplemental Arrows-A"
	case 0x2800 <= char && char <= 0x28ff:
		return "Braille Patterns"
	case 0x2900 <= char && char <= 0x297f:
		return "Supplemental Arrows-B"
	case 0x2980 <= char && char <= 0x29ff:
		return "Miscellaneous Mathematical Symbols-B"
	case 0x2a00 <= char && char <= 0x2aff:
		return "Supplemental Mathematical Operators"
	case 0x2b00 <= char && char <= 0x2bff:
		return "Miscellaneous Symbols and Arrows"
	case 0x2c00 <= char && char <= 0x2c5f:
		return "Glagolitic"
	case 0x2c60 <= char && char <= 0x2c7f:
		return "Latin Extended-C"
	case 0x2c80 <= char && char <= 0x2cff:
		return "Coptic"
	case 0x2d00 <= char && char <= 0x2d2f:
		return "Georgian Supplement"
	case 0x2d30 <= char && char <= 0x2d7f:
		return "Tifinagh"
	case 0x2d80 <= char && char <= 0x2ddf:
		return "Ethiopic Extended"
	case 0x2de0 <= char && char <= 0x2dff:
		return "Cyrillic Extended-A"
	case 0x2e00 <= char && char <= 0x2e7f:
		return "Supplemental Punctuation"
	case 0x2e80 <= char && char <= 0x2eff:
		return "CJK Radicals Supplement"
	case 0x2f00 <= char && char <= 0x2fdf:
		return "Kangxi Radicals"
	case 0x2ff0 <= char && char <= 0x2fff:
		return "Ideographic Description Characters"
	case 0x3000 <= char && char <= 0x303f:
		return "CJK Symbols and Punctuation"
	case 0x3040 <= char && char <= 0x309f:
		return "Hiragana"
	case 0x30a0 <= char && char <= 0x30ff:
		return "Katakana"
	case 0x3100 <= char && char <= 0x312f:
		return "Bopomofo"
	case 0x3130 <= char && char <= 0x318f:
		return "Hangul Compatibility Jamo"
	case 0x3190 <= char && char <= 0x319f:
		return "Kanbun"
	case 0x31a0 <= char && char <= 0x31bf:
		return "Bopomofo Extended"
	case 0x31c0 <= char && char <= 0x31ef:
		return "CJK Strokes"
	case 0x31f0 <= char && char <= 0x31ff:
		return "Katakana Phonetic Extensions"
	case 0x3200 <= char && char <= 0x32ff:
		return "Enclosed CJK Letters and Months"
	case 0x3300 <= char && char <= 0x33ff:
		return "CJK Compatibility"
	case 0x3400 <= char && char <= 0x4dbf:
		return "CJK Unified Ideographs Extension A"
	case 0x4dc0 <= char && char <= 0x4dff:
		return "Yijing Hexagram Symbols"
	case 0x4e00 <= char && char <= 0x9fff:
		return "CJK Unified Ideographs"
	case 0xa000 <= char && char <= 0xa48f:
		return "Yi Syllables"
	case 0xa490 <= char && char <= 0xa4cf:
		return "Yi Radicals"
	case 0xa4d0 <= char && char <= 0xa4ff:
		return "Lisu"
	case 0xa500 <= char && char <= 0xa63f:
		return "Vai"
	case 0xa640 <= char && char <= 0xa69f:
		return "Cyrillic Extended-B"
	case 0xa6a0 <= char && char <= 0xa6ff:
		return "Bamum"
	case 0xa700 <= char && char <= 0xa71f:
		return "Modifier Tone Letters"
	case 0xa720 <= char && char <= 0xa7ff:
		return "Latin Extended-D"
	case 0xa800 <= char && char <= 0xa82f:
		return "Syloti Nagri"
	case 0xa830 <= char && char <= 0xa83f:
		return "Common Indic Number Forms"
	case 0xa840 <= char && char <= 0xa87f:
		return "Phags-pa"
	case 0xa880 <= char && char <= 0xa8df:
		return "Saurashtra"
	case 0xa8e0 <= char && char <= 0xa8ff:
		return "Devanagari Extended"
	case 0xa900 <= char && char <= 0xa92f:
		return "Kayah Li"
	case 0xa930 <= char && char <= 0xa95f:
		return "Rejang"
	case 0xa960 <= char && char <= 0xa97f:
		return "Hangul Jamo Extended-A"
	case 0xa980 <= char && char <= 0xa9df:
		return "Javanese"
	case 0xa9e0 <= char && char <= 0xa9ff:
		return "Myanmar Extended-B"
	case 0xaa00 <= char && char <= 0xaa5f:
		return "Cham"
	case 0xaa60 <= char && char <= 0xaa7f:
		return "Myanmar Extended-A"
	case 0xaa80 <= char && char <= 0xaadf:
		return "Tai Viet"
	case 0xaae0 <= char && char <= 0xaaff:
		return "Meetei Mayek Extensions"
	case 0xab00 <= char && char <= 0xab2f:
		return "Ethiopic Extended-A"
	case 0xab30 <= char && char <= 0xab6f:
		return "Latin Extended-E"
	case 0xab70 <= char && char <= 0xabbf:
		return "Cherokee Supplement"
	case 0xabc0 <= char && char <= 0xabff:
		return "Meetei Mayek"
	case 0xac00 <= char && char <= 0xd7af:
		return "Hangul Syllables"
	case 0xd7b0 <= char && char <= 0xd7ff:
		return "Hangul Jamo Extended-B"
	case 0xd800 <= char && char <= 0xdb7f:
		return "High Surrogates"
	case 0xdb80 <= char && char <= 0xdbff:
		return "High Private Use Surrogates"
	case 0xdc00 <= char && char <= 0xdfff:
		return "Low Surrogates"
	case 0xe000 <= char && char <= 0xf8ff:
		return "Private Use Area"
	case 0xf900 <= char && char <= 0xfaff:
		return "CJK Compatibility Ideographs"
	case 0xfb00 <= char && char <= 0xfb4f:
		return "Alphabetic Presentation Forms"
	case 0xfb50 <= char && char <= 0xfdff:
		return "Arabic Presentation Forms-A"
	case 0xfe00 <= char && char <= 0xfe0f:
		return "Variation Selectors"
	case 0xfe10 <= char && char <= 0xfe1f:
		return "Vertical Forms"
	case 0xfe20 <= char && char <= 0xfe2f:
		return "Combining Half Marks"
	case 0xfe30 <= char && char <= 0xfe4f:
		return "CJK Compatibility Forms"
	case 0xfe50 <= char && char <= 0xfe6f:
		return "Small Form Variants"
	case 0xfe70 <= char && char <= 0xfeff:
		return "Arabic Presentation Forms-B"
	case 0xff00 <= char && char <= 0xffef:
		return "Halfwidth and Fullwidth Forms"
	case 0xfff0 <= char && char <= 0xffff:
		return "Specials"
	case 0x10000 <= char && char <= 0x1007f:
		return "Linear B Syllabary"
	case 0x10080 <= char && char <= 0x100ff:
		return "Linear B Ideograms"
	case 0x10100 <= char && char <= 0x1013f:
		return "Aegean Numbers"
	case 0x10140 <= char && char <= 0x1018f:
		return "Ancient Greek Numbers"
	case 0x10190 <= char && char <= 0x101cf:
		return "Ancient Symbols"
	case 0x101d0 <= char && char <= 0x101ff:
		return "Phaistos Disc"
	case 0x10280 <= char && char <= 0x1029f:
		return "Lycian"
	case 0x102a0 <= char && char <= 0x102df:
		return "Carian"
	case 0x102e0 <= char && char <= 0x102ff:
		return "Coptic Epact Numbers"
	case 0x10300 <= char && char <= 0x1032f:
		return "Old Italic"
	case 0x10330 <= char && char <= 0x1034f:
		return "Gothic"
	case 0x10350 <= char && char <= 0x1037f:
		return "Old Permic"
	case 0x10380 <= char && char <= 0x1039f:
		return "Ugaritic"
	case 0x103a0 <= char && char <= 0x103df:
		return "Old Persian"
	case 0x10400 <= char && char <= 0x1044f:
		return "Deseret"
	case 0x10450 <= char && char <= 0x1047f:
		return "Shavian"
	case 0x10480 <= char && char <= 0x104af:
		return "Osmanya"
	case 0x104b0 <= char && char <= 0x104ff:
		return "Osage"
	case 0x10500 <= char && char <= 0x1052f:
		return "Elbasan"
	case 0x10530 <= char && char <= 0x1056f:
		return "Caucasian Albanian"
	case 0x10570 <= char && char <= 0x105bf:
		return "Vithkuqi"
	case 0x10600 <= char && char <= 0x1077f:
		return "Linear A"
	case 0x10780 <= char && char <= 0x107bf:
		return "Latin Extended-F"
	case 0x10800 <= char && char <= 0x1083f:
		return "Cypriot Syllabary"
	case 0x10840 <= char && char <= 0x1085f:
		return "Imperial Aramaic"
	case 0x10860 <= char && char <= 0x1087f:
		return "Palmyrene"
	case 0x10880 <= char && char <= 0x108af:
		return "Nabataean"
	case 0x108e0 <= char && char <= 0x108ff:
		return "Hatran"
	case 0x10900 <= char && char <= 0x1091f:
		return "Phoenician"
	case 0x10920 <= char && char <= 0x1093f:
		return "Lydian"
	case 0x10980 <= char && char <= 0x1099f:
		return "Meroitic Hieroglyphs"
	case 0x109a0 <= char && char <= 0x109ff:
		return "Meroitic Cursive"
	case 0x10a00 <= char && char <= 0x10a5f:
		return "Kharoshthi"
	case 0x10a60 <= char && char <= 0x10a7f:
		return "Old South Arabian"
	case 0x10a80 <= char && char <= 0x10a9f:
		return "Old North Arabian"
	case 0x10ac0 <= char && char <= 0x10aff:
		return "Manichaean"
	case 0x10b00 <= char && char <= 0x10b3f:
		return "Avestan"
	case 0x10b40 <= char && char <= 0x10b5f:
		return "Inscriptional Parthian"
	case 0x10b60 <= char && char <= 0x10b7f:
		return "Inscriptional Pahlavi"
	case 0x10b80 <= char && char <= 0x10baf:
		return "Psalter Pahlavi"
	case 0x10c00 <= char && char <= 0x10c4f:
		return "Old Turkic"
	case 0x10c80 <= char && char <= 0x10cff:
		return "Old Hungarian"
	case 0x10d00 <= char && char <= 0x10d3f:
		return "Hanifi Rohingya"
	case 0x10e60 <= char && char <= 0x10e7f:
		return "Rumi Numeral Symbols"
	case 0x10e80 <= char && char <= 0x10ebf:
		return "Yezidi"
	case 0x10f00 <= char && char <= 0x10f2f:
		return "Old Sogdian"
	case 0x10f30 <= char && char <= 0x10f6f:
		return "Sogdian"
	case 0x10f70 <= char && char <= 0x10faf:
		return "Old Uyghur"
	case 0x10fb0 <= char && char <= 0x10fdf:
		return "Chorasmian"
	case 0x10fe0 <= char && char <= 0x10fff:
		return "Elymaic"
	case 0x11000 <= char && char <= 0x1107f:
		return "Brahmi"
	case 0x11080 <= char && char <= 0x110cf:
		return "Kaithi"
	case 0x110d0 <= char && char <= 0x110ff:
		return "Sora Sompeng"
	case 0x11100 <= char && char <= 0x1114f:
		return "Chakma"
	case 0x11150 <= char && char <= 0x1117f:
		return "Mahajani"
	case 0x11180 <= char && char <= 0x111df:
		return "Sharada"
	case 0x111e0 <= char && char <= 0x111ff:
		return "Sinhala Archaic Numbers"
	case 0x11200 <= char && char <= 0x1124f:
		return "Khojki"
	case 0x11280 <= char && char <= 0x112af:
		return "Multani"
	case 0x112b0 <= char && char <= 0x112ff:
		return "Khudawadi"
	case 0x11300 <= char && char <= 0x1137f:
		return "Grantha"
	case 0x11400 <= char && char <= 0x1147f:
		return "Newa"
	case 0x11480 <= char && char <= 0x114df:
		return "Tirhuta"
	case 0x11580 <= char && char <= 0x115ff:
		return "Siddham"
	case 0x11600 <= char && char <= 0x1165f:
		return "Modi"
	case 0x11660 <= char && char <= 0x1167f:
		return "Mongolian Supplement"
	case 0x11680 <= char && char <= 0x116cf:
		return "Takri"
	case 0x11700 <= char && char <= 0x1174f:
		return "Ahom"
	case 0x11800 <= char && char <= 0x1184f:
		return "Dogra"
	case 0x118a0 <= char && char <= 0x118ff:
		return "Warang Citi"
	case 0x11900 <= char && char <= 0x1195f:
		return "Dives Akuru"
	case 0x119a0 <= char && char <= 0x119ff:
		return "Nandinagari"
	case 0x11a00 <= char && char <= 0x11a4f:
		return "Zanabazar Square"
	case 0x11a50 <= char && char <= 0x11aaf:
		return "Soyombo"
	case 0x11ab0 <= char && char <= 0x11abf:
		return "Unified Canadian Aboriginal Syllabics Extended-A"
	case 0x11ac0 <= char && char <= 0x11aff:
		return "Pau Cin Hau"
	case 0x11c00 <= char && char <= 0x11c6f:
		return "Bhaiksuki"
	case 0x11c70 <= char && char <= 0x11cbf:
		return "Marchen"
	case 0x11d00 <= char && char <= 0x11d5f:
		return "Masaram Gondi"
	case 0x11d60 <= char && char <= 0x11daf:
		return "Gunjala Gondi"
	case 0x11ee0 <= char && char <= 0x11eff:
		return "Makasar"
	case 0x11fb0 <= char && char <= 0x11fbf:
		return "Lisu Supplement"
	case 0x11fc0 <= char && char <= 0x11fff:
		return "Tamil Supplement"
	case 0x12000 <= char && char <= 0x123ff:
		return "Cuneiform"
	case 0x12400 <= char && char <= 0x1247f:
		return "Cuneiform Numbers and Punctuation"
	case 0x12480 <= char && char <= 0x1254f:
		return "Early Dynastic Cuneiform"
	case 0x12f90 <= char && char <= 0x12fff:
		return "Cypro-Minoan"
	case 0x13000 <= char && char <= 0x1342f:
		return "Egyptian Hieroglyphs"
	case 0x13430 <= char && char <= 0x1343f:
		return "Egyptian Hieroglyph Format Controls"
	case 0x14400 <= char && char <= 0x1467f:
		return "Anatolian Hieroglyphs"
	case 0x16800 <= char && char <= 0x16a3f:
		return "Bamum Supplement"
	case 0x16a40 <= char && char <= 0x16a6f:
		return "Mro"
	case 0x16a70 <= char && char <= 0x16acf:
		return "Tangsa"
	case 0x16ad0 <= char && char <= 0x16aff:
		return "Bassa Vah"
	case 0x16b00 <= char && char <= 0x16b8f:
		return "Pahawh Hmong"
	case 0x16e40 <= char && char <= 0x16e9f:
		return "Medefaidrin"
	case 0x16f00 <= char && char <= 0x16f9f:
		return "Miao"
	case 0x16fe0 <= char && char <= 0x16fff:
		return "Ideographic Symbols and Punctuation"
	case 0x17000 <= char && char <= 0x187ff:
		return "Tangut"
	case 0x18800 <= char && char <= 0x18aff:
		return "Tangut Components"
	case 0x18b00 <= char && char <= 0x18cff:
		return "Khitan Small Script"
	case 0x18d00 <= char && char <= 0x18d7f:
		return "Tangut Supplement"
	case 0x1aff0 <= char && char <= 0x1afff:
		return "Kana Extended-B"
	case 0x1b000 <= char && char <= 0x1b0ff:
		return "Kana Supplement"
	case 0x1b100 <= char && char <= 0x1b12f:
		return "Kana Extended-A"
	case 0x1b130 <= char && char <= 0x1b16f:
		return "Small Kana Extension"
	case 0x1b170 <= char && char <= 0x1b2ff:
		return "Nushu"
	case 0x1bc00 <= char && char <= 0x1bc9f:
		return "Duployan"
	case 0x1bca0 <= char && char <= 0x1bcaf:
		return "Shorthand Format Controls"
	case 0x1cf00 <= char && char <= 0x1cfcf:
		return "Znamenny Musical Notation"
	case 0x1d000 <= char && char <= 0x1d0ff:
		return "Byzantine Musical Symbols"
	case 0x1d100 <= char && char <= 0x1d1ff:
		return "Musical Symbols"
	case 0x1d200 <= char && char <= 0x1d24f:
		return "Ancient Greek Musical Notation"
	case 0x1d2e0 <= char && char <= 0x1d2ff:
		return "Mayan Numerals"
	case 0x1d300 <= char && char <= 0x1d35f:
		return "Tai Xuan Jing Symbols"
	case 0x1d360 <= char && char <= 0x1d37f:
		return "Counting Rod Numerals"
	case 0x1d400 <= char && char <= 0x1d7ff:
		return "Mathematical Alphanumeric Symbols"
	case 0x1d800 <= char && char <= 0x1daaf:
		return "Sutton SignWriting"
	case 0x1df00 <= char && char <= 0x1dfff:
		return "Latin Extended-G"
	case 0x1e000 <= char && char <= 0x1e02f:
		return "Glagolitic Supplement"
	case 0x1e100 <= char && char <= 0x1e14f:
		return "Nyiakeng Puachue Hmong"
	case 0x1e290 <= char && char <= 0x1e2bf:
		return "Toto"
	case 0x1e2c0 <= char && char <= 0x1e2ff:
		return "Wancho"
	case 0x1e7e0 <= char && char <= 0x1e7ff:
		return "Ethiopic Extended-B"
	case 0x1e800 <= char && char <= 0x1e8df:
		return "Mende Kikakui"
	case 0x1e900 <= char && char <= 0x1e95f:
		return "Adlam"
	case 0x1ec70 <= char && char <= 0x1ecbf:
		return "Indic Siyaq Numbers"
	case 0x1ed00 <= char && char <= 0x1ed4f:
		return "Ottoman Siyaq Numbers"
	case 0x1ee00 <= char && char <= 0x1eeff:
		return "Arabic Mathematical Alphabetic Symbols"
	case 0x1f000 <= char && char <= 0x1f02f:
		return "Mahjong Tiles"
	case 0x1f030 <= char && char <= 0x1f09f:
		return "Domino Tiles"
	case 0x1f0a0 <= char && char <= 0x1f0ff:
		return "Playing Cards"
	case 0x1f100 <= char && char <= 0x1f1ff:
		return "Enclosed Alphanumeric Supplement"
	case 0x1f200 <= char && char <= 0x1f2ff:
		return "Enclosed Ideographic Supplement"
	case 0x1f300 <= char && char <= 0x1f5ff:
		return "Miscellaneous Symbols and Pictographs"
	case 0x1f600 <= char && char <= 0x1f64f:
		return "Emoticons"
	case 0x1f650 <= char && char <= 0x1f67f:
		return "Ornamental Dingbats"
	case 0x1f680 <= char && char <= 0x1f6ff:
		return "Transport and Map Symbols"
	case 0x1f700 <= char && char <= 0x1f77f:
		return "Alchemical Symbols"
	case 0x1f780 <= char && char <= 0x1f7ff:
		return "Geometric Shapes Extended"
	case 0x1f800 <= char && char <= 0x1f8ff:
		return "Supplemental Arrows-C"
	case 0x1f900 <= char && char <= 0x1f9ff:
		return "Supplemental Symbols and Pictographs"
	case 0x1fa00 <= char && char <= 0x1fa6f:
		return "Chess Symbols"
	case 0x1fa70 <= char && char <= 0x1faff:
		return "Symbols and Pictographs Extended-A"
	case 0x1fb00 <= char && char <= 0x1fbff:
		return "Symbols for Legacy Computing"
	case 0x20000 <= char && char <= 0x2a6df:
		return "CJK Unified Ideographs Extension B"
	case 0x2a700 <= char && char <= 0x2b73f:
		return "CJK Unified Ideographs Extension C"
	case 0x2b740 <= char && char <= 0x2b81f:
		return "CJK Unified Ideographs Extension D"
	case 0x2b820 <= char && char <= 0x2ceaf:
		return "CJK Unified Ideographs Extension E"
	case 0x2ceb0 <= char && char <= 0x2ebef:
		return "CJK Unified Ideographs Extension F"
	case 0x2f800 <= char && char <= 0x2fa1f:
		return "CJK Compatibility Ideographs Supplement"
	case 0x30000 <= char && char <= 0x3134f:
		return "CJK Unified Ideographs Extension G"
	case 0xe0000 <= char && char <= 0xe007f:
		return "Tags"
	case 0xe0100 <= char && char <= 0xe01ef:
		return "Variation Selectors Supplement"
	case 0xf0000 <= char && char <= 0xfffff:
		return "Supplementary Private Use Area-A"
	case 0x100000 <= char && char <= 0x10ffff:
		return "Supplementary Private Use Area-B"
	}
	return ""
}
